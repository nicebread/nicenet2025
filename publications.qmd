---
title: "Publications"
description-meta: "Information, pdfs, and social metrics of papers"
#page-layout: full
#back-to-top-navigation: true
title-block-banner: false
css: custom.css
---

<!-- How to refresh everything (including Haikus - this takes about XX min.!):

1. Make sure that ollama runs locally and the llama3.1 model is available
2. Delete the file `files/publist_processed.RData`
3. Render again.
-->

<!--Include academic icons or buttons-->
{{< include /files/includes/_academic.qmd >}}

<!--Popup windows for Abstracts-->
{{< include /files/includes/script-abstract-popup.html >}}

The buttons with small symbols for open access <img height='20' src='files/images/oa_small.png' alt='oa_badge'>, open data <img height='20' src='files/images/od_small.png' alt='od_badge'>, preregistration <img height='20' src='files/images/prereg_small.png' alt='prereg_badge'>, and open material <img height='20' src='files/images/om_small.png' alt='om_badge'> provide direct links to the sources. Not all of these badges have been officially awarded by the publishing journal (many journals have not implemented the badges yet, and some discarded them again).

The cards to the right provide a **Haiku Summary** for each publication (an idea I took from [John Helveston](https://www.jhelvy.com/research) and [Andrew Heiss](https://www.andrewheiss.com/research/)).

```{r setup0}
#| include: false

library(knitr)
library(kableExtra)
library(rio)
library(openalexR)
library(OAmetrics)
library(dplyr)
library(htmltools)
library(stringr)

knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  echo=FALSE,
  message=FALSE,
  warning=FALSE,
  out.width="100%"
)

# Set global chunk options for tables
options(knitr.table.format = "html")

# al = author list from the works object
format_name <- function(al, which="first", focus=c("Felix Schönbrodt", "Felix D. Schönbrodt")) {

    n_authors <- nrow(al)

    if (which == "first") {names <- al$au_display_name[1]} else 
    if (which == "last") {if (n_authors > 1) {
            names <- al$au_display_name[nrow(al)]
        }} else 
    if (which == "middle") {
        if (n_authors > 2) {names <- al$au_display_name[2:(nrow(al)-1)]}
    }

    # remember OSC members
    is_OSC <- names %in% focus

    namesplit <- str_split(names, " ")
    names2 <- sapply(namesplit, function(x) paste0(x[length(x)], " ", x[1] |> str_sub(1, 1)))
    
    # make OSC members bold
    names2[is_OSC] <- paste0("<b>", names2[is_OSC], "</b>")
    return(paste(names2, collapse=", "))
}



get_authors <- function(sbib, show_journal=TRUE) {

    res <- c()
    for (i in 1:nrow(sbib)) {
        n_authors <- nrow(sbib[i, ]$author[[1]])

        if (!is.null(n_authors)) {
            res <- c(res, paste0(
                    # first author
                    format_name(sbib[i, ]$author[[1]], which="first"),

                    # middle author.ids
                    ifelse(n_authors > 2, paste0(", ", format_name(al=sbib[i, ]$author[[1]], which="middle")), ""),

                    # last author
                    ifelse(n_authors > 1, paste0(" & ", format_name(sbib[i, ]$author[[1]], which="last")), ""),

                    " (<span class='year'>", sbib[i, ]$publication_year, "</span>). ",
                    #str_to_sentence(sbib[i, ]$display_name), 
                    ifelse(show_journal, paste0(" <i>", sbib[i, ]$so, "</i>."), ""), 
                    " <a href='", sbib[i, ]$doi, "'>", sbib[i, ]$doi, "</a>"
                    ))
        } else {
            res <- c(res, "No authors indicated")
        }
    }
  return(res)
}

get_haiku <- function(title, abstract, model="llama3.1", seed=1) {
    library(ollamar)
    prompt <- paste("Using only the provided title and abstract from a scientific publication, create a Haiku that artistically captures the essence of the research. Only return the resulting Haiku, without explanation. \n\n**Title**: ", title, "\n\n**Abstract**:", abstract, "\n\n")
    
    # Use the ollamar package to get the corrected country name
    haiku <- ollamar::generate(model, prompt, output = "text", seed = seed)
    return(haiku)
}

clean_title <- function(title) {
  # Remove any HTML tags by matching patterns between < and >
  clean <- gsub("<[^>]*>", "", title)
  return(clean)
}
```


```{r preprocess}
#| include: false

# keep the cached file if it exists.
if (file.exists("files/publist_processed.RData")) {
    load("files/publist_processed.RData")
} else {
    publist <- import("files/publist.xlsx")
    publist$doi <- normalize_dois(publist$doi)
    publist$is_preprint <- !is.na(publist$is_preprint) & publist$is_preprint == "true"

    publist <- publist %>% filter(!is.na(doi))

    OAlex_papers <- oa_fetch(entity = "works", doi = normalize_dois(publist$doi))

    non_OpenAlex_dois <- setdiff(publist$doi, OAlex_papers$doi)
    print(paste0(length(non_OpenAlex_dois), " papers in the list are not available in OpeAlex:"))
    print(publist %>% filter(doi %in% non_OpenAlex_dois) %>% select(doi, is_preprint, Title))
    
    # TODO: handle the non_OpenAlex_dois

    OAlex_papers <- left_join(OAlex_papers, publist, by = "doi")

    OAlex_papers <- OAlex_papers %>% 
        mutate(
            publication_date = as.Date(publication_date)
        ) %>% 
        arrange(desc(publication_date))

    OAlex_papers$haiku <- ""
    for (i in 1:nrow(OAlex_papers)) {
        print(paste0("Creating Haiku for ", OAlex_papers[i, "display_name"]))
        OAlex_papers$haiku[i] <- get_haiku(title=OAlex_papers[i, "display_name"], abstract=OAlex_papers[i, "ab"])
    }

    # Export the cache file
    save(OAlex_papers, file="files/publist_processed.RData")
}

```

```{r get_entry}
build_published_entry <- function(counter, OA_record) {
    paste0(
            "<div data-id='", counter, "' class='reference'>
            <div class='reference-content'>",

            strong(OA_record$display_name |> clean_title()),
            br(),

            "<span style='font-size: 80%; color: #555555;'>",
            get_authors(OA_record) |> HTML(),
            "</span>",

            "<div class='buttons'>",

            " <button class='button' onclick='openPopup(event, \"popup", counter, "\")'>
                Abstract
            </button>",
             ifelse(!is.na(OA_record$OpenAccess), paste0(
                "<a href='", OA_record$OpenAccess, "'  class='button'><img height='20' src='files/images/oa_small.png' alt='oa_badge'> PDF</a>"), ""),
            ifelse(!is.na(OA_record$OpenData), paste0(
                "<a href='", OA_record$OpenData, "'  class='button'><img height='20' src='files/images/od_small.png' alt='open_data_badge'> Open Data</a>"), ""),
            ifelse(!is.na(OA_record$OpenMaterial), paste0(
                "<a href='", OA_record$OpenMaterial, "'  class='button'><img height='20' src='files/images/om_small.png' alt='open_material_badge'> Open Material</a>"), ""),
            ifelse(!is.na(OA_record$Preregistration), paste0(
                "<a href='", OA_record$Preregistration, "'  class='button'><img height='20' src='files/images/prereg_small.png' alt='prereg_badge'> Preregistration</a>"), ""),
            "</div>",  # of .buttons

            "<div><span style='font-size: 80%; color: #555555;'>Citation count: ",  OA_record$cited_by_count, "</span></div>",
            "</div>",  # of .reference-content


            "<div class='haiku-box'>",
            str_split(OA_record$haiku, "\n")[[1]] |> paste(collapse=" - <br/>"),
            "</div>",

            "<!-- Pop-up Modal (Hidden by Default) -->
            <div id='popup", counter, "' class='popup'>
              <div class='popup-content'>
                <span class='close' onclick='closePopup(\"popup", counter, "\")'>&times;</span>
                <h3>Abstract</h3>
                <p>", OA_record$ab, "</p>
              </div>
            </div>",

            "</div>"   # of .reference
        )
}



build_preprint_entry <- function(counter, OA_record) {
    paste0(
            "<div data-id='", counter, "' class='reference'>
            <div class='reference-content'>",

            strong(OA_record$display_name |> clean_title()),
            br(),

            "<span style='font-size: 80%; color: #555555;'>",
            get_authors(OA_record,show_journal=FALSE) |> HTML(),
            "</span>",

            "<div class='buttons'>",

            " <button class='button' onclick='openPopup(event, \"popup", counter, "\")'>
                Abstract
            </button>",
             ifelse(!is.na(OA_record$OpenAccess), paste0(
                "<a href='", OA_record$OpenAccess, "'  class='button'><img height='20' src='files/images/oa_small.png' alt='oa_badge'> PDF</a>"), ""),
            ifelse(!is.na(OA_record$OpenData), paste0(
                "<a href='", OA_record$OpenData, "'  class='button'><img height='20' src='files/images/od_small.png' alt='open_data_badge'> Open Data</a>"), ""),
            ifelse(!is.na(OA_record$OpenMaterial), paste0(
                "<a href='", OA_record$OpenMaterial, "'  class='button'><img height='20' src='files/images/om_small.png' alt='open_material_badge'> Open Material</a>"), ""),
            ifelse(!is.na(OA_record$Preregistration), paste0(
                "<a href='", OA_record$Preregistration, "'  class='button'><img height='20' src='files/images/prereg_small.png' alt='prereg_badge'> Preregistration</a>"), ""),
            "</div>",  # of .buttons
            "</div>",  # of .reference-content


            "<div class='haiku-box'>",
            str_split(OA_record$haiku, "\n")[[1]] |> paste(collapse=" - <br/>"),
            "</div>",

            "<!-- Pop-up Modal (Hidden by Default) -->
            <div id='popup", counter, "' class='popup'>
              <div class='popup-content'>
                <span class='close' onclick='closePopup(\"popup", counter, "\")'>&times;</span>
                <h3>Abstract</h3>
                <p>", OA_record$ab, "</p>
              </div>
            </div>",

            "</div>"   # of .reference
        )
}
```


```{r build_reflist}
#| results: asis

PL <- ""

counter <- 0

# Preprints
OA_pp <- OAlex_papers %>% 
    filter(is_preprint == TRUE) %>% 
    arrange(desc(publication_date))

if (nrow(OA_pp) > 0) {
    PL <- c(PL, paste0("\n\n<h2>Preprints</h2>\n\n"))

    for (i in 1:nrow(OA_pp)) {        
        PL <- c(PL, build_preprint_entry(counter, OA_pp[i, ]))
        counter <- counter + 1
    }
}    

# Published papers
for (y in unique(OAlex_papers$publication_year) |> sort(decreasing=TRUE)) {

    OA_y <- OAlex_papers %>% 
        filter(
            publication_year == y,
            is_preprint == FALSE) %>% 
        arrange(desc(publication_date))

    if (nrow(OA_y) > 0) {
        PL <- c(PL, paste0("\n\n<h2>", y, "</h2>\n\n"))

        for (i in 1:nrow(OA_y)) {        
            PL <- c(PL, build_published_entry(counter, OA_y[i, ]))
            counter <- counter + 1
        }
    }    
}

PL <- c(PL, "</div></div>\n\n")  # closing outer divs "list" and "refList"

HTML(PL)
```


<!--Include social share buttons-->

<!-- {{< include /files/includes/_socialshare.qmd >}} -->
